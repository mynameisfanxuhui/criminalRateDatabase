{"remainingRequest":"C:\\Users\\torres_fan\\Desktop\\Safety-Application-CS542\\dashboard\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\torres_fan\\Desktop\\Safety-Application-CS542\\dashboard\\src\\components\\map.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\torres_fan\\Desktop\\Safety-Application-CS542\\dashboard\\src\\components\\map.vue","mtime":1606437702683},{"path":"C:\\Users\\torres_fan\\Desktop\\Safety-Application-CS542\\dashboard\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\torres_fan\\Desktop\\Safety-Application-CS542\\dashboard\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\torres_fan\\Desktop\\Safety-Application-CS542\\dashboard\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\torres_fan\\Desktop\\Safety-Application-CS542\\dashboard\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgeyBMTWFwLCBMVGlsZUxheWVyLCBMR2VvSnNvbiB9IGZyb20gInZ1ZTItbGVhZmxldCI7DQppbXBvcnQgYm9zdG9uR2VvIGZyb20gIi4uL2Fzc2V0cy9jaXR5R2VvL2Jvc3Rvbi5qc29uIjsNCg0KZXhwb3J0IGRlZmF1bHQgew0KICBuYW1lOiAiRXhhbXBsZSIsDQogIGNvbXBvbmVudHM6IHsNCiAgICBMTWFwLA0KICAgIExUaWxlTGF5ZXIsDQogICAgTEdlb0pzb24sDQogIH0sDQogIGRhdGEoKSB7DQogICAgcmV0dXJuIHsNCiAgICAgIGxvYWRpbmc6IGZhbHNlLA0KICAgICAgc2hvdzogdHJ1ZSwNCiAgICAgIGVuYWJsZVRvb2x0aXA6IHRydWUsDQogICAgICB6b29tOiAxMSwNCiAgICAgIGNlbnRlcjogWzQyLjMyMjQzLCAtNzEuMDc5NzddLA0KICAgICAgZ2VvanNvbjogbnVsbCwNCiAgICAgIGZpbGxDb2xvcjogbnVsbCwNCiAgICAgIHVybDogImh0dHBzOi8ve3N9LnRpbGUub3BlbnN0cmVldG1hcC5vcmcve3p9L3t4fS97eX0ucG5nIiwNCiAgICAgIGF0dHJpYnV0aW9uOg0KICAgICAgICAnJmNvcHk7IDxhIGhyZWY9Imh0dHA6Ly9vc20ub3JnL2NvcHlyaWdodCI+T3BlblN0cmVldE1hcDwvYT4gY29udHJpYnV0b3JzJywNCiAgICB9Ow0KICB9LA0KICBjb21wdXRlZDogew0KICAgIG9wdGlvbnMoKSB7DQogICAgICByZXR1cm4gew0KICAgICAgICBvbkVhY2hGZWF0dXJlOiB0aGlzLm9uRWFjaEZlYXR1cmVGdW5jdGlvbiwNCiAgICAgIH07DQogICAgfSwNCiAgICBzdHlsZUZ1bmN0aW9uKCkgew0KICAgICAgLy8gaW1wb3J0YW50ISBuZWVkIHRvdWNoIGZpbGxDb2xvciBpbiBjb21wdXRlZCBmb3IgcmUtY2FsY3VsYXRlIHdoZW4gY2hhbmdlIGZpbGxDb2xvcg0KICAgICAgcmV0dXJuIChmZWF0dXJlKSA9PiB7DQogICAgICAgIHZhciBmaWxsQ29sb3IgPSB0aGlzLmdldENvbG9yKGZlYXR1cmUucHJvcGVydGllcy5kZW5zaXR5KTsNCiAgICAgICAgcmV0dXJuIHsNCiAgICAgICAgICB3ZWlnaHQ6IDIsDQogICAgICAgICAgY29sb3I6ICIjRUNFRkYxIiwNCiAgICAgICAgICBvcGFjaXR5OiAxLA0KICAgICAgICAgIGZpbGxDb2xvcjogZmlsbENvbG9yLA0KICAgICAgICAgIGZpbGxPcGFjaXR5OiAxLA0KICAgICAgICB9Ow0KICAgICAgfTsNCiAgICB9LA0KICAgIG9uRWFjaEZlYXR1cmVGdW5jdGlvbigpIHsNCiAgICAgIGlmICghdGhpcy5lbmFibGVUb29sdGlwKSB7DQogICAgICAgIHJldHVybiAoKSA9PiB7fTsNCiAgICAgIH0NCiAgICAgIHJldHVybiAoZmVhdHVyZSwgbGF5ZXIpID0+IHsNCiAgICAgICAgbGF5ZXIuYmluZFRvb2x0aXAoDQogICAgICAgICAgIjxkaXY+TnVtYmVyIG9mIENyaW1lczoiICsNCiAgICAgICAgICAgIGZlYXR1cmUucHJvcGVydGllcy5kZW5zaXR5ICsNCiAgICAgICAgICAgICI8L2Rpdj48ZGl2PlJlZ2lvbjogIiArDQogICAgICAgICAgICBmZWF0dXJlLnByb3BlcnRpZXMuTmFtZSArDQogICAgICAgICAgICAiPC9kaXY+IiwNCiAgICAgICAgICB7IHBlcm1hbmVudDogZmFsc2UsIHN0aWNreTogdHJ1ZSB9DQogICAgICAgICk7DQogICAgICAgIHRoaXMuZmlsbENvbG9yID0gdGhpcy5nZXRDb2xvcihmZWF0dXJlLnByb3BlcnRpZXMuZGVuc2l0eSk7DQogICAgICB9Ow0KICAgIH0sDQogIH0sDQogIGFzeW5jIGNyZWF0ZWQoKSB7DQogICAgdGhpcy5sb2FkaW5nID0gdHJ1ZTsNCiAgICBjb25zdCBkYXRhID0gYm9zdG9uR2VvOw0KICAgIHRoaXMuZ2VvanNvbiA9IGRhdGE7DQogICAgdGhpcy5sb2FkaW5nID0gZmFsc2U7DQogIH0sDQogIG1ldGhvZHM6IHsNCiAgICBnZXRDb2xvcjogZnVuY3Rpb24gKGQpIHsNCiAgICAgIHJldHVybiBkID4gMzgwMTANCiAgICAgICAgPyAiIzgwMDAyNiINCiAgICAgICAgOiBkID4gMjkyNjYNCiAgICAgICAgPyAiI0JEMDAyNiINCiAgICAgICAgOiBkID4gMjA1MjINCiAgICAgICAgPyAiI0UzMUExQyINCiAgICAgICAgOiBkID4gMTI4MjkNCiAgICAgICAgPyAiI0ZDNEUyQSINCiAgICAgICAgOiBkID4gNTEzNw0KICAgICAgICA/ICIjRkQ4RDNDIg0KICAgICAgICA6ICIjRkZFREEwIjsNCiAgICB9LA0KICB9LA0KfTsNCg=="},{"version":3,"sources":["map.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAsBA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"map.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div>\r\n    <l-map\r\n      :zoom=\"zoom\"\r\n      :center=\"center\"\r\n      style=\"height: 400px; width: 100%\"\r\n      zoomDisable=\"false\"\r\n      minZoom=\"11\"\r\n      maxZoom=\"11\"\r\n    >\r\n      <l-tile-layer :url=\"url\" :attribution=\"attribution\" />\r\n      <l-geo-json\r\n        v-if=\"show\"\r\n        :geojson=\"geojson\"\r\n        :options=\"options\"\r\n        :options-style=\"styleFunction\"\r\n      />\r\n    </l-map>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { LMap, LTileLayer, LGeoJson } from \"vue2-leaflet\";\r\nimport bostonGeo from \"../assets/cityGeo/boston.json\";\r\n\r\nexport default {\r\n  name: \"Example\",\r\n  components: {\r\n    LMap,\r\n    LTileLayer,\r\n    LGeoJson,\r\n  },\r\n  data() {\r\n    return {\r\n      loading: false,\r\n      show: true,\r\n      enableTooltip: true,\r\n      zoom: 11,\r\n      center: [42.32243, -71.07977],\r\n      geojson: null,\r\n      fillColor: null,\r\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\r\n      attribution:\r\n        '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',\r\n    };\r\n  },\r\n  computed: {\r\n    options() {\r\n      return {\r\n        onEachFeature: this.onEachFeatureFunction,\r\n      };\r\n    },\r\n    styleFunction() {\r\n      // important! need touch fillColor in computed for re-calculate when change fillColor\r\n      return (feature) => {\r\n        var fillColor = this.getColor(feature.properties.density);\r\n        return {\r\n          weight: 2,\r\n          color: \"#ECEFF1\",\r\n          opacity: 1,\r\n          fillColor: fillColor,\r\n          fillOpacity: 1,\r\n        };\r\n      };\r\n    },\r\n    onEachFeatureFunction() {\r\n      if (!this.enableTooltip) {\r\n        return () => {};\r\n      }\r\n      return (feature, layer) => {\r\n        layer.bindTooltip(\r\n          \"<div>Number of Crimes:\" +\r\n            feature.properties.density +\r\n            \"</div><div>Region: \" +\r\n            feature.properties.Name +\r\n            \"</div>\",\r\n          { permanent: false, sticky: true }\r\n        );\r\n        this.fillColor = this.getColor(feature.properties.density);\r\n      };\r\n    },\r\n  },\r\n  async created() {\r\n    this.loading = true;\r\n    const data = bostonGeo;\r\n    this.geojson = data;\r\n    this.loading = false;\r\n  },\r\n  methods: {\r\n    getColor: function (d) {\r\n      return d > 38010\r\n        ? \"#800026\"\r\n        : d > 29266\r\n        ? \"#BD0026\"\r\n        : d > 20522\r\n        ? \"#E31A1C\"\r\n        : d > 12829\r\n        ? \"#FC4E2A\"\r\n        : d > 5137\r\n        ? \"#FD8D3C\"\r\n        : \"#FFEDA0\";\r\n    },\r\n  },\r\n};\r\n</script>\r\n"]}]}