{"remainingRequest":"C:\\Users\\torres_fan\\Desktop\\Safety-Application-CS542\\dashboard\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\torres_fan\\Desktop\\Safety-Application-CS542\\dashboard\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\torres_fan\\Desktop\\Safety-Application-CS542\\dashboard\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\torres_fan\\Desktop\\Safety-Application-CS542\\dashboard\\src\\components\\Barchart.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\torres_fan\\Desktop\\Safety-Application-CS542\\dashboard\\src\\components\\Barchart.vue","mtime":1606443546953},{"path":"C:\\Users\\torres_fan\\Desktop\\Safety-Application-CS542\\dashboard\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\torres_fan\\Desktop\\Safety-Application-CS542\\dashboard\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\torres_fan\\Desktop\\Safety-Application-CS542\\dashboard\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\torres_fan\\Desktop\\Safety-Application-CS542\\dashboard\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyIGZyb20gIkM6L1VzZXJzL3RvcnJlc19mYW4vRGVza3RvcC9TYWZldHktQXBwbGljYXRpb24tQ1M1NDIvZGFzaGJvYXJkL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiQzovVXNlcnMvdG9ycmVzX2Zhbi9EZXNrdG9wL1NhZmV0eS1BcHBsaWNhdGlvbi1DUzU0Mi9kYXNoYm9hcmQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgeyBHQ2hhcnQgfSBmcm9tICJ2dWUtZ29vZ2xlLWNoYXJ0cyI7CmltcG9ydCBheGlvcyBmcm9tICJheGlvcyI7CnZhciB3ZWJjYWxsID0gYXhpb3MuY3JlYXRlKHsKICBiYXNlVVJMOiAiaHR0cDovLzEyNy4wLjAuMTo1MDAwLyIsCiAgdGltZW91dDogMjAwMDAsCiAgd2l0aENyZWRlbnRpYWxzOiBmYWxzZSwKICBoZWFkZXJzOiB7CiAgICAiQ29udGVudC1UeXBlIjogImFwcGxpY2F0aW9uL2pzb24iCiAgfQp9KTsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJBcHAiLAogIGNvbXBvbmVudHM6IHsKICAgIEdDaGFydDogR0NoYXJ0CiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgY2hhcnRzTGliOiBudWxsLAogICAgICAvLyBBcnJheSB3aWxsIGJlIGF1dG9tYXRpY2FsbHkgcHJvY2Vzc2VkIHdpdGggdmlzdWFsaXphdGlvbi5hcnJheVRvRGF0YVRhYmxlIGZ1bmN0aW9uCiAgICAgIGNoYXJ0RGF0YTogW10gLy9zZXR0aW5nOiB7cGFja2FnZXM6WyJjb3JlY2hhcnQiXX0KCiAgICB9OwogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIGNoYXJ0T3B0aW9uczogZnVuY3Rpb24gY2hhcnRPcHRpb25zKCkgewogICAgICBpZiAoIXRoaXMuY2hhcnRzTGliKSByZXR1cm4gbnVsbDsKICAgICAgcmV0dXJuIHRoaXMuY2hhcnRzTGliLmNoYXJ0cy5CYXIuY29udmVydE9wdGlvbnMoewogICAgICAgIGJhcnM6ICJob3Jpem9udGFsIiwKICAgICAgICAvLyBSZXF1aXJlZCBmb3IgTWF0ZXJpYWwgQmFyIENoYXJ0cy4KICAgICAgICBoQXhpczogewogICAgICAgICAgdGl0bGU6ICJDb3VudCIsCiAgICAgICAgICBtaW54VmFsdWU6IDExMiwKICAgICAgICAgIGdyaWRsaW5lczogewogICAgICAgICAgICBjb3VudDogMTAKICAgICAgICAgIH0sCiAgICAgICAgICBmb3JtYXQ6ICJkZWNpbWFsIiwKICAgICAgICAgIGRpcmVjdGlvbjogLTEgLy8gYmFzZWxpbmVDb2xvcjogJ3JlZCcsCiAgICAgICAgICAvLyB0ZXh0U3R5bGU6IHtjb2xvcjogJ3BpbmsnfSwKICAgICAgICAgIC8vIHRpY2tzOiBbNTAwLDEwMDAsMTUwMCwyMDAwLF0KICAgICAgICAgIC8vIGJhc2VsaW5lQ29sb3I6ICdyZWQnCgogICAgICAgIH0sCiAgICAgICAgdkF4aXM6IHsKICAgICAgICAgIHRpdGxlOiAiV2VhdGhlciBUeXBlIiwKICAgICAgICAgIGJhc2VsaW5lQ29sb3I6ICJyZWQiLAogICAgICAgICAgbWluVmFsdWU6IDExMiwKICAgICAgICAgIGRpcmVjdGlvbjogLTEgLy8gdGlja3M6IFs1MDAsMTAwMCwxNTAwLDIwMDAsXQogICAgICAgICAgLy8gZ3JpZGxpbmVzOiB7IGNvdW50OiAxMCB9CgogICAgICAgIH0sCiAgICAgICAgaGVpZ2h0OiAzMDAsCiAgICAgICAgYmFyOiB7CiAgICAgICAgICBncm91cFdpZHRoOiAiNzUlIgogICAgICAgIH0sCiAgICAgICAgY29sb3JzOiBbIiM3NTcwYjMiXSwKICAgICAgICBsZWdlbmQ6IHsKICAgICAgICAgIHBvc2l0aW9uOiAibm9uZSIKICAgICAgICB9IC8vIGJhY2tncm91bmRDb2xvcjogJ3JlZCcKICAgICAgICAvLyBpc1N0YWNrZWQ6IHRydWUKCiAgICAgIH0pOwogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgb25DaGFydFJlYWR5OiBmdW5jdGlvbiBvbkNoYXJ0UmVhZHkoY2hhcnQsIGdvb2dsZSkgewogICAgICB0aGlzLmNoYXJ0c0xpYiA9IGdvb2dsZTsKICAgIH0sCiAgICB0aW1lQ291bnQ6IGZ1bmN0aW9uIHRpbWVDb3VudCgpIHsKICAgICAgdmFyIHZtID0gdGhpczsKCiAgICAgIHRyeSB7CiAgICAgICAgd2ViY2FsbC5wb3N0KCIvbG9jVGltZUNvdW50IiwgdGhpcy4kc3RvcmUuc3RhdGUubG9jYXRpb24pLnRoZW4oIC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgICAgICAgICB2YXIgX3JlZiA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZShyZXNwb25zZSkgewogICAgICAgICAgICB2YXIgdGVtcCwgcmVzdWx0LCBfaXRlcmF0b3IsIF9zdGVwLCBpOwoKICAgICAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAyOwogICAgICAgICAgICAgICAgICAgIHJldHVybiBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KHJlc3BvbnNlLmRhdGEpKTsKCiAgICAgICAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICAgICAgICB0ZW1wID0gX2NvbnRleHQuc2VudDsKCiAgICAgICAgICAgICAgICAgICAgaWYgKHRlbXAubGVuZ3RoID09IDApIHsKICAgICAgICAgICAgICAgICAgICAgIGFsZXJ0KCJTb3JyeSwgV2UgZG8gbm90IGhhdmUgYW55IGluZm8gb24gdGhlIGxvY2F0aW9uIHlvdSBzZWFyY2hlZCIpOwogICAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgICAgcmVzdWx0ID0gW107CiAgICAgICAgICAgICAgICAgICAgX2l0ZXJhdG9yID0gX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIodGVtcCk7CgogICAgICAgICAgICAgICAgICAgIHRyeSB7CiAgICAgICAgICAgICAgICAgICAgICBmb3IgKF9pdGVyYXRvci5zKCk7ICEoX3N0ZXAgPSBfaXRlcmF0b3IubigpKS5kb25lOykgewogICAgICAgICAgICAgICAgICAgICAgICBpID0gX3N0ZXAudmFsdWU7CiAgICAgICAgICAgICAgICAgICAgICAgIHJlc3VsdC5wdXNoKHsKICAgICAgICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbjogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgbGF0OiBwYXJzZUZsb2F0KGlbIkxBVCJdKSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxuZzogcGFyc2VGbG9hdChpWyJMT04iXSkKICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGVycikgewogICAgICAgICAgICAgICAgICAgICAgX2l0ZXJhdG9yLmUoZXJyKTsKICAgICAgICAgICAgICAgICAgICB9IGZpbmFsbHkgewogICAgICAgICAgICAgICAgICAgICAgX2l0ZXJhdG9yLmYoKTsKICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAgIHZtLm1hcmtlcnMgPSByZXN1bHQ7CgogICAgICAgICAgICAgICAgICBjYXNlIDg6CiAgICAgICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sIF9jYWxsZWUpOwogICAgICAgICAgfSkpOwoKICAgICAgICAgIHJldHVybiBmdW5jdGlvbiAoX3gpIHsKICAgICAgICAgICAgcmV0dXJuIF9yZWYuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgICAgICAgIH07CiAgICAgICAgfSgpKTsKICAgICAgfSBjYXRjaCAoZXJyKSB7CiAgICAgICAgY29uc29sZS5sb2coImVycm9yIik7CiAgICAgICAgYWxlcnQoZXJyKTsKICAgICAgfQogICAgfQogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHRoaXMudGltZUNvdW50KCk7CiAgfQp9Ow=="},{"version":3,"sources":["Barchart.vue"],"names":[],"mappings":"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","sourcesContent":["<!--author: xli14@WPI.EDU-->\r\n\r\n<template>\r\n  <div id=\"app\" class=\"mt-3\">\r\n    <h5 class=\"text-center\">Weather Frequency</h5>\r\n    <br />\r\n    <GChart\r\n      :settings=\"{ packages: ['bar'] }\"\r\n      :data=\"chartData\"\r\n      :options=\"chartOptions\"\r\n      :createChart=\"(el, google) => new google.charts.Bar(el)\"\r\n      @ready=\"onChartReady\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { GChart } from \"vue-google-charts\";\r\nimport axios from \"axios\";\r\n\r\nvar webcall = axios.create({\r\n  baseURL: \"http://127.0.0.1:5000/\",\r\n  timeout: 20000,\r\n  withCredentials: false,\r\n  headers: { \"Content-Type\": \"application/json\" },\r\n});\r\n\r\nexport default {\r\n  name: \"App\",\r\n  components: {\r\n    GChart,\r\n  },\r\n  data() {\r\n    return {\r\n      chartsLib: null,\r\n      // Array will be automatically processed with visualization.arrayToDataTable function\r\n      chartData: [],\r\n      //setting: {packages:[\"corechart\"]}\r\n    };\r\n  },\r\n  computed: {\r\n    chartOptions() {\r\n      if (!this.chartsLib) return null;\r\n      return this.chartsLib.charts.Bar.convertOptions({\r\n        bars: \"horizontal\", // Required for Material Bar Charts.\r\n        hAxis: {\r\n          title: \"Count\",\r\n          minxValue: 112,\r\n          gridlines: { count: 10 },\r\n          format: \"decimal\",\r\n          direction: -1,\r\n          // baselineColor: 'red',\r\n          // textStyle: {color: 'pink'},\r\n          // ticks: [500,1000,1500,2000,]\r\n          // baselineColor: 'red'\r\n        },\r\n        vAxis: {\r\n          title: \"Weather Type\",\r\n          baselineColor: \"red\",\r\n          minValue: 112,\r\n          direction: -1,\r\n          // ticks: [500,1000,1500,2000,]\r\n          // gridlines: { count: 10 }\r\n        },\r\n        height: 300,\r\n        bar: { groupWidth: \"75%\" },\r\n        colors: [\"#7570b3\"],\r\n        legend: { position: \"none\" },\r\n        // backgroundColor: 'red'\r\n        // isStacked: true\r\n      });\r\n    },\r\n  },\r\n  methods: {\r\n    onChartReady(chart, google) {\r\n      this.chartsLib = google;\r\n    },\r\n    timeCount() {\r\n      var vm = this;\r\n      try {\r\n        webcall\r\n          .post(\"/locTimeCount\", this.$store.state.location)\r\n          .then(async function (response) {\r\n            var temp = await JSON.parse(JSON.stringify(response.data));\r\n            if (temp.length == 0) {\r\n              alert(\r\n                \"Sorry, We do not have any info on the location you searched\"\r\n              );\r\n            }\r\n            var result = [];\r\n            for (var i of temp) {\r\n              result.push({\r\n                position: {\r\n                  lat: parseFloat(i[\"LAT\"]),\r\n                  lng: parseFloat(i[\"LON\"]),\r\n                },\r\n              });\r\n            }\r\n            vm.markers = result;\r\n          });\r\n      } catch (err) {\r\n        console.log(\"error\");\r\n        alert(err);\r\n      }\r\n    },\r\n  },\r\n  mounted() {\r\n    this.timeCount();\r\n  },\r\n};\r\n</script>\r\n"],"sourceRoot":"src/components"}]}